{
  "compilerOptions": {
    "strict": false,
    // 以严格模式解析并为每个源文件生成 "use strict"语句
    "strictPropertyInitialization": false,
    // 编译的目标是什么版本的
    "target": "es6",
    // 指定生成哪个模块系统代码
    "module": "commonjs",
    // 允许编译javascript文件。
    "allowJs": true,
    // 是否生成map文件
    "sourceMap": true,
    // 是否默认禁用 any
    "noImplicitAny": false,
    // 是否移除注释
    "removeComments": true,
    // 是否自动创建类型声明文件
    "declaration": true,
    // 类型声明文件的输出目录
    "declarationDir": "./lib",
    // 输出目录
    "outDir": "./dist",
    /* Module Resolution Options */
    "esModuleInterop": true,
    // 不报告执行不到的代码错误。
    "allowUnreachableCode": true,
    // 不报告未使用的标签错误
    "allowUnusedLabels": false,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    // 工作根目录
    "baseUrl": ".",
    // 在 .tsx文件里支持JSX
    "jsx": "react",
    "types": [
      //指定引入的类型声明文件，默认是自动引入所有声明文件，一旦指定该选项，则会禁用自动引入，改为只引入指定的类型声明文件，如果指定空数组[]则不引用任何文件
      // 引入 node 的类型声明
      "node"
    ],
    "paths": {
      // 指定模块的路径，和baseUrl有关联，和webpack中resolve.alias配置一样
      "src": [
        //指定后可以在文件之直接 import * from 'src';
        "./src"
      ]
    },
    "lib": [
      // 编译过程中需要引入的库文件的列表
      "es5",
      "es2015",
      "es2016",
      "es2017",
      "es2018"
      // "dom"
    ]
  },
  // 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）
  "include": [
    "src/*",
    "src/**/*"
  ],
  // 指定一个排除列表（include的反向操作）
  "exclude": [
    "node_modules"
  ]
}
